function V1_Output = V1(DIM, phi, phi_old, theta, dt, h, h_old, k, k_old) %, sigma)
%Bototm Left Corner
XYN = DIM.XY;
XYN(:,DIM.r) = XYN;

dx = XYN(1,2) - XYN(1,1);
dz = XYN(2,1) - XYN(1,1);

V1_Output = phi - phi_old - ( dt/((dx/2)*(dz/2)) )*( theta * ( ...
              ( ((k(h(1)) + k(h(2)))/2 ) * (DIM.kxx*h(2)*dz)/(2*dx) ) ...
            - ( ((k(h(1)) + k(h(2)))/2 ) * (DIM.kxx*h(1)*dz)/(2*dx) ) ...
            + ( ((k(h(1)) + k(h(DIM.n+1)))/2 ) * (DIM.kzz*dx)/2 ) ...
            + ( ((k(h(1)) + k(h(DIM.n+1)))/2 ) * (DIM.kzz*h(DIM.n+1)*dx)/(2*dz) ) ...
            - ( ((k(h(1)) + k(h(DIM.n+1)))/2 ) * (DIM.kzz*h(1)*dx)/(2*dz) ) )... 
            + (1 - theta) * ( ...
              ( ((k_old(h(1)) + k_old(h(2)))/2 ) * (DIM.kxx*h_old(2)*dx)/(2*dz) ) ...
            - ( ((k_old(h(1)) + k_old(h(2)))/2 ) * (DIM.kxx*h_old(1)*dz)/(2*dx) ) ...
            + ( ((k_old(h(1)) + k_old(h(DIM.n+1)))/2 ) * (DIM.kzz*dx)/2 ) ...
            + ( ((k_old(h(1)) + k_old(h(DIM.n+1)))/2 ) * (DIM.kzz*h_old(DIM.n+1)*dx)/(2*dz) ) ...
            - ( ((k_old(h(1)) + k_old(h(DIM.n+1)))/2 ) * (DIM.kzz*h_old(1)*dx)/(2*dz) ) ));
        
end
